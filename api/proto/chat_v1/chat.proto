syntax = "proto3";

package api.chat_v1;

import 'google/protobuf/empty.proto';
import 'google/protobuf/timestamp.proto';
import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/en7ka/chat-server/pkg/chat_v1;chatv1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Chat API"
    contact: {
      name: "en7ka";
      email: "enikdamei1999@mail.ru"
    };
  };

  host: "localhost:8080";
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
};

service ChatAPI {
  rpc CreateChat(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/chat/v1/create"
      body: "*"
    };
  };
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/chat/v1/{id}"
    };
  };
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {
    option (google.api.http) = {
      post: "/chat/v1/send"
      body: "*"
    };
  };
  rpc GetChat(GetChatRequest) returns (GetChatResponse) {
    option (google.api.http) = {
      get: "/chat/v1/{id}"
    };
  };
  rpc AddMemberToChat(AddMemberToChatRequest) returns (AddMemberToChatResponse) {
    option (google.api.http) = {
      post: "/chat/v1/add_member"
      body: "*"
    };
  };
  rpc ConnectChat(ConnectChatRequest) returns (stream Message);
}

message CreateRequest {
  repeated string usernames = 1 [(validate.rules).repeated = {
    min_items: 1,
    max_items: 50,
    items: {string: {min_len: 1, max_len: 255}}
  }];
}

message CreateResponse {
  int64 id = 1;
}

message ConnectChatRequest {
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

message DeleteRequest {
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

message SendMessageRequest {
  int64 chat_id = 1 [(validate.rules).int64.gt = 0];
  int64 from_user_id = 2 [(validate.rules).int64.gt = 0];
  string text = 3 [(validate.rules).string = {min_len: 1, max_len: 1000}];
}

message SendMessageResponse {
  Message message = 1;
}

message Chat {
  int64 id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
}

message GetChatRequest {
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

message GetChatResponse {
  Chat chat = 1;
}

message Message {
  int64 id = 1;
  int64 from_user_id = 2;
  string text = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message GetMessagesRequest {
  int64 chat_id = 1 [(validate.rules).int64.gt = 0];
}

message GetMessagesResponse {
  repeated Message messages = 1;
}

message AddMemberToChatRequest {
  int64 chat_id = 1 [(validate.rules).int64.gt = 0];
  int64 user_id = 2 [(validate.rules).int64.gt = 0];
}

message AddMemberToChatResponse {
  int64 member_id = 1;
}